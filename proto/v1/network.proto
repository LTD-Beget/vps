syntax = 'proto3';

package beget.vps.v1.network;

import "google/api/annotations.proto";
import "vps/proto/v1/structures.proto";

service NetworkService {
    // Заказ дополнительных IP-адресов для пользователя
    rpc orderIpAddress (OrderIpAddressRequest) returns (OrderIpAddressResponse) {
        option (google.api.http) = {
            post: "/v1/vps/network"
            body: "*"
        };
    }

    // Отмена заказа дополнительного IP адреса пользователя
    rpc removeIpAddress (RemoveIpAddressRequest) returns (RemoveIpAddressResponse) {
        option (google.api.http) = {
            delete: "/v1/vps/network/{ip_address}"
        };
    }

    rpc getNetworkInfo (GetNetworkInfoRequest) returns (GetNetworkInfoResponse) {
        option (google.api.http) = {
            get: "/v1/vps/network"
        };
    }

    rpc createPrivateNetwork (CreatePrivateNetworkRequest) returns (CreatePrivateNetworkResponse) {
        option (google.api.http) = {
            post: "/v1/vps/private-network"
            body: "*"
        };
    }

    rpc suggestPrivateAddress (SuggestPrivateAddressRequest) returns (SuggestPrivateAddressResponse) {
        option (google.api.http) = {
            post: "/v1/vps/private-network/{network_id}/suggested-address"
            body: "*"
            };
        }
}

message OrderIpAddressRequest {
    // Идентификатор VPS, к которому следует добавить дополнительный IP-адрес
    // Поле не является обязательным
    string id = 1;
}

message OrderIpAddressResponse {
    oneof result {
        // Успешый заказ дополнительного IP-адресоа
        string ip_address = 1;

        // Произошла ошибка при заказе дополнительного IP-адреса
        Error error = 2;
    }

    message Error {
        // Код ошибки
        Code code = 1;

        // Сообщение об ошибке
        string message = 2;

        enum Code {
            // Внутренняя ошибка сервера
            INTERNAL_ERROR = 0;

            // Недостаточно средств на счету
            INSUFFICIENT_FUNDS = 1;

            // Достигнут лимит резервации IP-адресов для пользователя
            CUSTOMER_IP_LIMIT_REACHED = 2;

            // Произошла ошибка при добавлении дополнительного IP адреса внутри гостевой ОС
            GUEST_OS_ADD_IP_ADDRESS_FAILED = 3;
        }
    }
}

message RemoveIpAddressRequest {
    // IP-адрес
    string ip_address = 1;
}

message RemoveIpAddressResponse {
    oneof result {
        // Успешое удаление дополнительного IP-адресоа
        string ip_address = 1;

        // Произошла ошибка при заказе дополнительного IP-адреса
        Error error = 2;
    }

    message Error {
        // Код ошибки
        Code code = 1;

        // Сообщение об ошибке
        string message = 2;

        enum Code {
            // Внутренняя ошибка сервера
            INTERNAL_ERROR = 0;

            // Произошла ошибка при удалении дополнительного IP адреса внутри гостевой ОС
            GUEST_OS_REMOVE_IP_ADDRESS_FAILED = 1;
        }
    }
}

message GetNetworkInfoRequest {

}

message GetNetworkInfoResponse {
    // Основные IP-адреса пользователя
    repeated structures.IpInfo ip = 1;

    // Дополнительные IP-адреса пользователя
    repeated structures.AdditionalIpInfo additional_ip = 2;

    // Приватные сети пользователя
    repeated structures.PrivateNetwork private_network = 3;
}

message CreatePrivateNetworkRequest {

}

message CreatePrivateNetworkResponse {
    oneof result {
        //
        structures.PrivateNetwork network = 1;

        // Произошла ошибка при заказе дополнительного IP-адреса
        Error error = 2;
    }

    message Error {
        // Код ошибки
        Code code = 1;

        // Сообщение об ошибке
        string message = 2;

        enum Code {
            // Внутренняя ошибка сервера
            INTERNAL_ERROR = 0;
            // Достигнут лимит на число приватных сетей для пользователя
            LIMIT_REACHED = 1;
        }
    }
}

message SuggestPrivateAddressRequest {
    string network_id = 1;
    string vps_id = 2; // can be empty
}

message SuggestPrivateAddressResponse {
    string ip = 1;
}