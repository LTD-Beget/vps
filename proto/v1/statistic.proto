syntax = 'proto3';

package beget.vps.v1.statistic;

import "google/api/annotations.proto";

service StatisticService {
    rpc getCpu (GetCpuRequest) returns (GetCpuResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/cpu/{id}"
        };
    }

    rpc getMemory (GetMemoryRequest) returns (GetMemoryResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/memory/{id}"
        };
    }

    rpc getDisk (GetDiskRequest) returns (GetDiskResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/disk/{id}"
        };
    }

    rpc getDiskUsage(GetDiskUsageRequest) returns (GetDiskUsageResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/disk-usage/{id}"
        };
    }

    rpc getNetwork (GetNetworkRequest) returns (GetNetworkResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/network/{id}"
        };
    }

    rpc getLoadAverage (GetLoadAverageRequest) returns (GetLoadAverageResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/load-average/{id}"
        };
    }

    rpc getCpuDetails (GetCpuDetailsRequest) returns (GetCpuDetailsResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/cpu-details/{id}"
        };
    }

    rpc getProcessList (GetProcessListRequest) returns (GetProcessListResponse) {
        option (google.api.http) = {
            get: "/v1/vps/statistic/processes/{id}"
        };
    }
}

message GetCpuRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
    Period period = 2;
}

message GetCpuResponse {
    SeriesData cpu = 2;
}

message GetMemoryRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
    Period period = 2;
}

message GetMemoryResponse {
    SeriesData memory = 1;
}

message GetDiskRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
    Period period = 2;
}

message GetDiskResponse {
    SeriesData data_read = 1;
    SeriesData data_write = 2;
}


message GetNetworkRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
    Period period = 2;
}

message GetNetworkResponse {
    SeriesData data_rx = 1;
    SeriesData data_tx = 2;
}

message GetDiskUsageRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
    Period period = 2;
}

message GetDiskUsageResponse {
    SeriesData disk_usage = 1;
}

message GetLoadAverageRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
    Period period = 2;
}

message GetLoadAverageResponse {
    repeated string date = 1;
    repeated double la1 = 2;
    repeated double la5 = 3;
    repeated double la15 = 4;
}

message GetCpuDetailsRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
    Period period = 2;
}

message GetCpuDetailsResponse {
    repeated string date = 1;
    repeated double user = 2;
    repeated double nice = 3;
    repeated double system = 4;
    repeated double idle = 5;
    repeated double iowait = 6;
    repeated double irq = 7;
    repeated double softirq = 8;
}

message GetProcessListRequest {
    // Идентификатор Vps (uuid)
    string id = 1;
}

message GetProcessListResponse {
    repeated ProcessInfo process = 1;

    message ProcessInfo {
        uint32 pid = 1;
        int32 nice = 2;
        uint64 virt = 3; // bytes
        uint64 rss = 4; // bytes
        string state = 5;
        float cpu_percent = 6;
        float mem_percent = 7;
        float time_running = 8; // seconds
        string name = 9;
    }
}

message SeriesData {
    repeated string date = 1;
    repeated double value = 2;
}

enum Period {
    UNKNOWN = 0;
    HOUR = 1;
    DAY = 2;
    WEEK = 3;
    MONTH = 4;
}